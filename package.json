{
  "name": "wgl-toolchain",
  "displayName": "WGLScript toolchain",
  "description": "WGLScript formatter, linter, intellisense for VS Code",
  "version": "0.1.3",
  "publisher": "etherealhero",
  "repository": "https://github.com/etherealHero/wgl-toolchain",
  "keywords": ["wglscript", "formatter", "linter", "intellisense"],
  "author": "Maxim Gutsan",
  "license": "MIT",
  "icon": "public/logo.jpg",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": ["Programming Languages", "Formatters"],
  "activationEvents": ["onLanguage:javascript"],
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "build:parser": "peggy src/compiler/parser.pegjs --format es --dts",
    "build:package": "npx vsce package",
    "compile": "npm run build:parser && tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "vscode-test",
    "format": "npx @biomejs/biome check --write"
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "WGLScript",
      "properties": {
        "wglscript.intellisense.diagnostics.allowedErrorCodes": {
          "type": "array",
          "scope": "resource",
          "default": [7006],
          "markdownDescription": "Cast _error_ diagnostics as _warning_ diagnostics by list of [TypeScript Error Codes](https://typescript.tv/errors/). You can enter the code to know it, hover on the diagnostic in the document and in the pop-up prompt copy the code"
        },
        "wglscript.intellisense.requestDepthStrategy.localSymbols": {
          "type": "string",
          "enum": ["bundle", "project"],
          "markdownEnumDescriptions": [
            "Search local Symbol only in bundle of current script module",
            "Search local Symbol in whole project"
          ],
          "enumItemLabels": ["Bundle scope", "Project"],
          "default": "project",
          "markdownDescription": "The request processing strategy (find all references, rename features) in the Intelligent Service for Symbol that **not defined** in the global script module"
        },
        "wglscript.intellisense.requestDepthStrategy.globalSymbols": {
          "type": "string",
          "enum": ["bundle", "project"],
          "markdownEnumDescriptions": [
            "Search global Symbol only in bundle of current script module",
            "Search global Symbol in whole project"
          ],
          "enumItemLabels": ["Bundle scope", "Project"],
          "default": "bundle",
          "markdownDescription": "The request processing strategy (find all references, rename features) in the Intelligent Service for Symbol that **defined** in the global script module"
        },
        "wglscript.intellisense.requestDepthStrategy.librarySymbols": {
          "type": "string",
          "enum": ["bundle"],
          "markdownEnumDescriptions": [
            "Search library Symbol only in bundle of current script module"
          ],
          "enumItemLabels": ["Bundle scope"],
          "default": "bundle",
          "markdownDescription": "The request processing strategy (find all references, rename features) in the Intelligent Service for Symbol that **defined** in d.ts files (node_modules/@types)"
        },
        "wglscript.intellisense.requestStrategy.diagnostics": {
          "type": "string",
          "enum": ["onchange", "onsave", "disabled"],
          "markdownEnumDescriptions": [
            "Calculate diagnostics **on change** text document",
            "Calculate diagnostics **on save** text document",
            "Disable diagnostics"
          ],
          "enumItemLabels": ["On Change", "On Save", "Disabled"],
          "default": "onsave",
          "markdownDescription": "The request processing strategy for diagnostics in the Intelligent Service for active text document"
        },
        "wglscript.intellisense.requestDepthStrategy.sliceModuleReferencesLength": {
          "type": "integer",
          "scope": "resource",
          "minimum": 10,
          "maximum": 5000,
          "default": 20,
          "markdownDescription": "Cut the list of modules to a specified **length** where the Symbol is mentioned for find all References in Project or rename all References in Project. If both workspace features are disabled this option has no effect. Reduce for _speed up_ processing **find all references, rename info**. **Warning** This option purposely cuts potentially useful links."
        },
        "wglscript.intellisense.buildThreads": {
          "type": "integer",
          "scope": "resource",
          "minimum": 1,
          "maximum": 1000,
          "default": 250,
          "markdownDescription": "Maximum build threads count on _initialize toolchain_"
        },
        "wglscript.intellisense.typescriptThreads": {
          "type": "integer",
          "scope": "resource",
          "minimum": 1,
          "maximum": 50,
          "default": 20,
          "markdownDescription": "Maximum TypeScript Virtual File System threads for workspace features find refs, rename Symbol. Too large a setting can lead to memory failure and service failure"
        },
        "wglscript.globalScript.path": {
          "type": "string",
          "scope": "resource",
          "default": "Lib/AppGlobalScript.js",
          "markdownDescription": "Global script module of wglscript project"
        }
      }
    }
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.4",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20",
    "@types/vscode": "^1.73.0",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/vsce": "^3.2.2",
    "mocha": "^10.2.0",
    "peggy": "^4.2.0",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "@typescript/vfs": "^1.6.0",
    "ignore": "^7.0.3",
    "prettier": "^3.5.2",
    "source-map": "^0.7.4"
  }
}
